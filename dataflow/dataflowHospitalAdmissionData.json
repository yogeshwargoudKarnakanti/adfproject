{
	"name": "dataflowHospitalAdmissionData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_Hospital_Admission_Data",
						"type": "DatasetReference"
					},
					"name": "importDataFromdsHospitalAdmissionData"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "sourceCountryLookUp"
				},
				{
					"dataset": {
						"referenceName": "DimDate",
						"type": "DatasetReference"
					},
					"name": "SourceDimDate"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "selectRequiresColumns"
				},
				{
					"name": "LookUp"
				},
				{
					"name": "SelectRequColFromLookup"
				},
				{
					"name": "DailyAndWeeklyOccupency"
				},
				{
					"name": "DerivedEcdcYearWeek"
				},
				{
					"name": "AggDimDate"
				},
				{
					"name": "joinWithDate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> importDataFromdsHospitalAdmissionData",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceCountryLookUp",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceDimDate",
				"importDataFromdsHospitalAdmissionData select(mapColumn(",
				"          country,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectRequiresColumns",
				"selectRequiresColumns, sourceCountryLookUp lookup(selectRequiresColumns@country == sourceCountryLookUp@country,",
				"     multiple: true,",
				"     broadcast: 'auto')~> LookUp",
				"LookUp select(mapColumn(",
				"          country = selectRequiresColumns@country,",
				"          indicator,",
				"          reported_date,",
				"          reported_year_week,",
				"          value,",
				"          source,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectRequColFromLookup",
				"SelectRequColFromLookup split(indicator=='Weekly new hospital admissions per 100k'||indicator=='Weekly new ICU admissions per 100k',",
				"     indicator=='Daily ICU occupancy'||indicator=='Daily hospital occupancy',",
				"     disjoint: false) ~> DailyAndWeeklyOccupency@(weekly, Daily)",
				"SourceDimDate derive(ecdcyearweek = year +'-W' + lpad(week_of_year,2,'0')) ~> DerivedEcdcYearWeek",
				"DerivedEcdcYearWeek aggregate(groupBy(ecdcyearweek),",
				"     week_startDate = min(date),",
				"          week_endDate = max(date)) ~> AggDimDate",
				"DailyAndWeeklyOccupency@weekly, AggDimDate join(reported_year_week == ecdcyearweek,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinWithDate"
			]
		}
	}
}